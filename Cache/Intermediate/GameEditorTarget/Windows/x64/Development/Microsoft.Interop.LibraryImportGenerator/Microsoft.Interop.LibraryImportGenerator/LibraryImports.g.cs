// <auto-generated/>
namespace Game
{
    public unsafe partial class GameManager
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_deathScreenActor(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.GameManager::Internal_Get_deathScreenActor", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class GameManager
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.GameManager::Internal_Set_deathScreenActor", ExactSpelling = true)]
        internal static extern partial void Internal_Set_deathScreenActor(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.CharacterController Internal_Get_characterController(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.CharacterController __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.CharacterControllerMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.CharacterControllerMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_characterController", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_characterController", ExactSpelling = true)]
        internal static extern partial void Internal_Set_characterController(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_cameraContainer(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_cameraContainer", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_cameraContainer", ExactSpelling = true)]
        internal static extern partial void Internal_Set_cameraContainer(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_playerBody(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_playerBody", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_playerBody", ExactSpelling = true)]
        internal static extern partial void Internal_Set_playerBody(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_movementSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_Get_movementSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_movementSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_Set_movementSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_airMovementAcceleration", ExactSpelling = true)]
        internal static extern partial float Internal_Get_airMovementAcceleration(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_airMovementAcceleration", ExactSpelling = true)]
        internal static extern partial void Internal_Set_airMovementAcceleration(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_groundMovementAcceleration", ExactSpelling = true)]
        internal static extern partial float Internal_Get_groundMovementAcceleration(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_groundMovementAcceleration", ExactSpelling = true)]
        internal static extern partial void Internal_Set_groundMovementAcceleration(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_gravity", ExactSpelling = true)]
        internal static extern partial float Internal_Get_gravity(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_gravity", ExactSpelling = true)]
        internal static extern partial void Internal_Set_gravity(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_rotationSmoothing", ExactSpelling = true)]
        internal static extern partial float Internal_Get_rotationSmoothing(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_rotationSmoothing", ExactSpelling = true)]
        internal static extern partial void Internal_Set_rotationSmoothing(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_jumpSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_Get_jumpSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_jumpSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_Set_jumpSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_cooldown", ExactSpelling = true)]
        internal static extern partial float Internal_Get_cooldown(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_cooldown", ExactSpelling = true)]
        internal static extern partial void Internal_Set_cooldown(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_GetMoveSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_GetMoveSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_SetMoveSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_SetMoveSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_GetGravity", ExactSpelling = true)]
        internal static extern partial float Internal_GetGravity(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_SetGravity", ExactSpelling = true)]
        internal static extern partial void Internal_SetGravity(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_GetRotationSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_GetRotationSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_SetRotationSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_SetRotationSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.CharacterController Internal_GetController(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.CharacterController __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.CharacterControllerMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.CharacterControllerMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_GetController", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_SetController", ExactSpelling = true)]
        internal static extern partial void Internal_SetController(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Camera Internal_GetPlayerCamera(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Camera __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.CameraMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.CameraMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_GetPlayerCamera", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class TestScript
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TestScript::Internal_SetPlayerCamera", ExactSpelling = true)]
        internal static extern partial void Internal_SetPlayerCamera(nint __obj, nint value);
    }
}
