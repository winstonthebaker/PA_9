// <auto-generated/>
namespace Game
{
    public unsafe partial class Explodes
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Prefab Internal_Get_explosionPrefab(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Prefab __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Explodes::Internal_Get_explosionPrefab", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class Explodes
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Explodes::Internal_Set_explosionPrefab", ExactSpelling = true)]
        internal static extern partial void Internal_Set_explosionPrefab(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class ExplosionDestroySelf
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.ExplosionDestroySelf::Internal_Get_lifeTime", ExactSpelling = true)]
        internal static extern partial float Internal_Get_lifeTime(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class ExplosionDestroySelf
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.ExplosionDestroySelf::Internal_Set_lifeTime", ExactSpelling = true)]
        internal static extern partial void Internal_Set_lifeTime(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class FloatingMine
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial bool Internal_Get_existsOnStart(nint __obj)
        {
            bool __retVal;
            byte __retVal_native;
            {
                __retVal_native = __PInvoke(__obj);
            }

            // Unmarshal - Convert native data to managed data.
            __retVal = __retVal_native != 0;
            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.FloatingMine::Internal_Get_existsOnStart", ExactSpelling = true)]
            static extern unsafe byte __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class FloatingMine
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial void Internal_Set_existsOnStart(nint __obj, bool value)
        {
            byte __value_native;
            // Marshal - Convert managed data to native data.
            __value_native = (byte)(value ? 1 : 0);
            {
                __PInvoke(__obj, __value_native);
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.FloatingMine::Internal_Set_existsOnStart", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint ____obj_native, byte __value_native);
        }
    }
}
namespace Game
{
    public unsafe partial class FloatingMine
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Collider Internal_Get_col(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Collider __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ColliderMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ColliderMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.FloatingMine::Internal_Get_col", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class FloatingMine
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.FloatingMine::Internal_Set_col", ExactSpelling = true)]
        internal static extern partial void Internal_Set_col(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class GameManager
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.GameManager::Internal_Get_startingTime", ExactSpelling = true)]
        internal static extern partial float Internal_Get_startingTime(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class GameManager
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.GameManager::Internal_Set_startingTime", ExactSpelling = true)]
        internal static extern partial void Internal_Set_startingTime(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class GameManager
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_UIManager(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.GameManager::Internal_Get_UIManager", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class GameManager
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.GameManager::Internal_Set_UIManager", ExactSpelling = true)]
        internal static extern partial void Internal_Set_UIManager(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class LauncherEnemy
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Prefab Internal_Get_missilePrefab(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Prefab __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.LauncherEnemy::Internal_Get_missilePrefab", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class LauncherEnemy
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.LauncherEnemy::Internal_Set_missilePrefab", ExactSpelling = true)]
        internal static extern partial void Internal_Set_missilePrefab(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class LauncherEnemy
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.LauncherEnemy::Internal_Get_spawnTime", ExactSpelling = true)]
        internal static extern partial float Internal_Get_spawnTime(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class LauncherEnemy
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.LauncherEnemy::Internal_Set_spawnTime", ExactSpelling = true)]
        internal static extern partial void Internal_Set_spawnTime(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Prefab Internal_Get_minePrefab(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Prefab __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Get_minePrefab", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Set_minePrefab", ExactSpelling = true)]
        internal static extern partial void Internal_Set_minePrefab(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_mineTarget(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Get_mineTarget", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Set_mineTarget", ExactSpelling = true)]
        internal static extern partial void Internal_Set_mineTarget(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Get_moveSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_Get_moveSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Set_moveSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_Set_moveSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Get_spawnTime", ExactSpelling = true)]
        internal static extern partial float Internal_Get_spawnTime(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Set_spawnTime", ExactSpelling = true)]
        internal static extern partial void Internal_Set_spawnTime(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Get_spawnEarly", ExactSpelling = true)]
        internal static extern partial float Internal_Get_spawnEarly(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class MineSpawner
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MineSpawner::Internal_Set_spawnEarly", ExactSpelling = true)]
        internal static extern partial void Internal_Set_spawnEarly(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class MovingEnemy
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor[] Internal_Get_followPoints(nint __obj, global::System.Type resultArrayItemType0, out int __returnCount)
        {
            bool __invokeSucceeded = default;
            global::System.Runtime.CompilerServices.Unsafe.SkipInit(out __returnCount);
            nint __resultArrayItemType0_native = default;
            global::FlaxEngine.Actor[] __retVal = default;
            nint* __retVal_native = default;
            // Setup - Perform required setup.
            int __retVal_native__numElements;
            global::System.Runtime.CompilerServices.Unsafe.SkipInit(out __retVal_native__numElements);
            try
            {
                // Marshal - Convert managed data to native data.
                __resultArrayItemType0_native = global::FlaxEngine.Interop.SystemTypeMarshaller.ConvertToUnmanaged(resultArrayItemType0);
                // Pin - Pin data in preparation for calling the P/Invoke.
                fixed (int* ____returnCount_native = &__returnCount)
                {
                    __retVal_native = __PInvoke(__obj, __resultArrayItemType0_native, ____returnCount_native);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal_native__numElements = __returnCount;
                __retVal = global::FlaxEngine.Interop.ArrayMarshaller<global::FlaxEngine.Actor, nint>.NativeToManaged.AllocateContainerForManagedElements(__retVal_native, __retVal_native__numElements);
                {
                    global::System.ReadOnlySpan<nint> __retVal_native__nativeSpan = global::FlaxEngine.Interop.ArrayMarshaller<global::FlaxEngine.Actor, nint>.NativeToManaged.GetUnmanagedValuesSource(__retVal_native, __retVal_native__numElements);
                    global::System.Span<global::FlaxEngine.Actor> __retVal_native__managedSpan = global::FlaxEngine.Interop.ArrayMarshaller<global::FlaxEngine.Actor, nint>.NativeToManaged.GetManagedValuesDestination(__retVal);
                    for (int __i0 = 0; __i0 < __retVal_native__numElements; ++__i0)
                    {
                        __retVal_native__managedSpan[__i0] = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native__nativeSpan[__i0]);
                    }
                }
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    {
                        global::System.ReadOnlySpan<nint> __retVal_native__nativeSpan = global::FlaxEngine.Interop.ArrayMarshaller<global::FlaxEngine.Actor, nint>.NativeToManaged.GetUnmanagedValuesSource(__retVal_native, __retVal_native__numElements);
                        for (int __i0 = 0; __i0 < __retVal_native__nativeSpan.Length; ++__i0)
                        {
                            global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native__nativeSpan[__i0]);
                        }
                    }

                    global::FlaxEngine.Interop.ArrayMarshaller<global::FlaxEngine.Actor, nint>.NativeToManaged.Free(__retVal_native);
                }

                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                global::FlaxEngine.Interop.SystemTypeMarshaller.Free(__resultArrayItemType0_native);
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MovingEnemy::Internal_Get_followPoints", ExactSpelling = true)]
            static extern unsafe nint* __PInvoke(nint ____obj_native, nint __resultArrayItemType0_native, int* ____returnCount_native);
        }
    }
}
namespace Game
{
    public unsafe partial class MovingEnemy
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial void Internal_Set_followPoints(nint __obj, global::FlaxEngine.Actor[] value, int __valueCount)
        {
            bool __invokeSucceeded = default;
            nint* __value_native = default;
            // Setup - Perform required setup.
            scoped global::FlaxEngine.Interop.ArrayMarshaller<global::FlaxEngine.Actor, nint>.ManagedToNative __value_native__marshaller = new();
            int __value_native__numElements;
            int __value_native__lastIndexMarshalled = 0;
            global::System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
            try
            {
                // Marshal - Convert managed data to native data.
                __value_native__marshaller.FromManaged(value);
                {
                    global::System.ReadOnlySpan<global::FlaxEngine.Actor> __value_native__managedSpan = __value_native__marshaller.GetManagedValuesSource();
                    global::System.Span<nint> __value_native__nativeSpan = __value_native__marshaller.GetUnmanagedValuesDestination();
                    for (int __i0 = 0; __i0 < __value_native__managedSpan.Length; ++__i0, ++__value_native__lastIndexMarshalled)
                    {
                        __value_native__nativeSpan[__i0] = global::FlaxEngine.Interop.ActorMarshaller.ManagedToNative.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                    }
                }

                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __value_native = __value_native__marshaller.ToUnmanaged();
                    __PInvoke(__obj, __value_native, __valueCount);
                }

                __invokeSucceeded = true;
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    _ = __value_native__lastIndexMarshalled;
                }

                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                {
                    global::System.ReadOnlySpan<nint> __value_native__nativeSpan = __value_native__marshaller.GetUnmanagedValuesDestination();
                    for (int __i0 = 0; __i0 < __value_native__lastIndexMarshalled; ++__i0)
                    {
                        global::FlaxEngine.Interop.ActorMarshaller.ManagedToNative.Free(__value_native__nativeSpan[__i0]);
                    }
                }

                __value_native__marshaller.Free();
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MovingEnemy::Internal_Set_followPoints", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint ____obj_native, nint* __value_native, int ____valueCount_native);
        }
    }
}
namespace Game
{
    public unsafe partial class MovingEnemy
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MovingEnemy::Internal_Get_moveSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_Get_moveSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class MovingEnemy
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.MovingEnemy::Internal_Set_moveSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_Set_moveSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class Pickup
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Pickup::Internal_Get_type", ExactSpelling = true)]
        internal static extern partial int Internal_Get_type(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class Pickup
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Pickup::Internal_Set_type", ExactSpelling = true)]
        internal static extern partial void Internal_Set_type(nint __obj, int value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.CharacterController Internal_Get_characterController(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.CharacterController __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.CharacterControllerMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.CharacterControllerMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_characterController", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_characterController", ExactSpelling = true)]
        internal static extern partial void Internal_Set_characterController(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_cameraContainer(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_cameraContainer", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_cameraContainer", ExactSpelling = true)]
        internal static extern partial void Internal_Set_cameraContainer(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_playerBody(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_playerBody", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_playerBody", ExactSpelling = true)]
        internal static extern partial void Internal_Set_playerBody(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_movementSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_Get_movementSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_movementSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_Set_movementSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_airMovementAcceleration", ExactSpelling = true)]
        internal static extern partial float Internal_Get_airMovementAcceleration(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_airMovementAcceleration", ExactSpelling = true)]
        internal static extern partial void Internal_Set_airMovementAcceleration(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_groundMovementAcceleration", ExactSpelling = true)]
        internal static extern partial float Internal_Get_groundMovementAcceleration(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_groundMovementAcceleration", ExactSpelling = true)]
        internal static extern partial void Internal_Set_groundMovementAcceleration(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_gravity", ExactSpelling = true)]
        internal static extern partial float Internal_Get_gravity(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_gravity", ExactSpelling = true)]
        internal static extern partial void Internal_Set_gravity(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_rotationSmoothing", ExactSpelling = true)]
        internal static extern partial float Internal_Get_rotationSmoothing(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_rotationSmoothing", ExactSpelling = true)]
        internal static extern partial void Internal_Set_rotationSmoothing(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_jumpSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_Get_jumpSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_jumpSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_Set_jumpSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_jumpNormalForce", ExactSpelling = true)]
        internal static extern partial float Internal_Get_jumpNormalForce(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_jumpNormalForce", ExactSpelling = true)]
        internal static extern partial void Internal_Set_jumpNormalForce(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Get_jumpVerticalForce", ExactSpelling = true)]
        internal static extern partial float Internal_Get_jumpVerticalForce(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerController
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerController::Internal_Set_jumpVerticalForce", ExactSpelling = true)]
        internal static extern partial void Internal_Set_jumpVerticalForce(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_shotgunRecoil", ExactSpelling = true)]
        internal static extern partial float Internal_Get_shotgunRecoil(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_shotgunRecoil", ExactSpelling = true)]
        internal static extern partial void Internal_Set_shotgunRecoil(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::Game.PlayerController Internal_Get_pc(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::Game.PlayerController __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::Game.Interop.PlayerControllerMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::Game.Interop.PlayerControllerMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_pc", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_pc", ExactSpelling = true)]
        internal static extern partial void Internal_Set_pc(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_shotgun(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_shotgun", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_shotgun", ExactSpelling = true)]
        internal static extern partial void Internal_Set_shotgun(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Actor Internal_Get_pistol(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Actor __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ActorMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_pistol", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_pistol", ExactSpelling = true)]
        internal static extern partial void Internal_Set_pistol(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial void Internal_Get_layers(nint __obj, out global::FlaxEngine.LayersMask __resultAsRef)
        {
            global::System.Runtime.CompilerServices.Unsafe.SkipInit(out __resultAsRef);
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (global::FlaxEngine.LayersMask* ____resultAsRef_native = &__resultAsRef)
            {
                __PInvoke(__obj, ____resultAsRef_native);
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_layers", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint ____obj_native, global::FlaxEngine.LayersMask* ____resultAsRef_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial void Internal_Set_layers(nint __obj, ref global::FlaxEngine.LayersMask value)
        {
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (global::FlaxEngine.LayersMask* __value_native = &value)
            {
                __PInvoke(__obj, __value_native);
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_layers", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint ____obj_native, global::FlaxEngine.LayersMask* __value_native);
        }
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_pistolAmmo", ExactSpelling = true)]
        internal static extern partial int Internal_Get_pistolAmmo(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_pistolAmmo", ExactSpelling = true)]
        internal static extern partial void Internal_Set_pistolAmmo(nint __obj, int value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_shotgunAmmo", ExactSpelling = true)]
        internal static extern partial int Internal_Get_shotgunAmmo(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_shotgunAmmo", ExactSpelling = true)]
        internal static extern partial void Internal_Set_shotgunAmmo(nint __obj, int value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_pistolVisualRecoilDistance", ExactSpelling = true)]
        internal static extern partial float Internal_Get_pistolVisualRecoilDistance(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_pistolVisualRecoilDistance", ExactSpelling = true)]
        internal static extern partial void Internal_Set_pistolVisualRecoilDistance(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_pistolVisualRecoilRotation", ExactSpelling = true)]
        internal static extern partial float Internal_Get_pistolVisualRecoilRotation(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_pistolVisualRecoilRotation", ExactSpelling = true)]
        internal static extern partial void Internal_Set_pistolVisualRecoilRotation(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_shotgunVisualRecoilDistance", ExactSpelling = true)]
        internal static extern partial float Internal_Get_shotgunVisualRecoilDistance(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_shotgunVisualRecoilDistance", ExactSpelling = true)]
        internal static extern partial void Internal_Set_shotgunVisualRecoilDistance(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Get_shotgunVisualRecoilRotation", ExactSpelling = true)]
        internal static extern partial float Internal_Get_shotgunVisualRecoilRotation(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class PlayerWeapon
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.PlayerWeapon::Internal_Set_shotgunVisualRecoilRotation", ExactSpelling = true)]
        internal static extern partial void Internal_Set_shotgunVisualRecoilRotation(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class Projectile
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Collider Internal_Get_collider(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Collider __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ColliderMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ColliderMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Projectile::Internal_Get_collider", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class Projectile
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Projectile::Internal_Set_collider", ExactSpelling = true)]
        internal static extern partial void Internal_Set_collider(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class Rocket
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.RigidBody Internal_Get_rb(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.RigidBody __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.RigidBodyMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.RigidBodyMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Rocket::Internal_Get_rb", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class Rocket
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Rocket::Internal_Set_rb", ExactSpelling = true)]
        internal static extern partial void Internal_Set_rb(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class Rocket
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Collider Internal_Get_col(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Collider __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.ColliderMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.ColliderMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Rocket::Internal_Get_col", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class Rocket
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Rocket::Internal_Set_col", ExactSpelling = true)]
        internal static extern partial void Internal_Set_col(nint __obj, nint value);
    }
}
namespace Game
{
    public unsafe partial class Rocket
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Rocket::Internal_Get_thrustPower", ExactSpelling = true)]
        internal static extern partial float Internal_Get_thrustPower(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class Rocket
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.Rocket::Internal_Set_thrustPower", ExactSpelling = true)]
        internal static extern partial void Internal_Set_thrustPower(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class RotateObject
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.RotateObject::Internal_Get_rotationSpeed", ExactSpelling = true)]
        internal static extern partial float Internal_Get_rotationSpeed(nint __obj);
    }
}
namespace Game
{
    public unsafe partial class RotateObject
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.RotateObject::Internal_Set_rotationSpeed", ExactSpelling = true)]
        internal static extern partial void Internal_Set_rotationSpeed(nint __obj, float value);
    }
}
namespace Game
{
    public unsafe partial class RotateObject
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial void Internal_Get_rotationAxis(nint __obj, out global::FlaxEngine.Vector3 __resultAsRef)
        {
            global::System.Runtime.CompilerServices.Unsafe.SkipInit(out __resultAsRef);
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (global::FlaxEngine.Vector3* ____resultAsRef_native = &__resultAsRef)
            {
                __PInvoke(__obj, ____resultAsRef_native);
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.RotateObject::Internal_Get_rotationAxis", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint ____obj_native, global::FlaxEngine.Vector3* ____resultAsRef_native);
        }
    }
}
namespace Game
{
    public unsafe partial class RotateObject
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial void Internal_Set_rotationAxis(nint __obj, ref global::FlaxEngine.Vector3 value)
        {
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (global::FlaxEngine.Vector3* __value_native = &value)
            {
                __PInvoke(__obj, __value_native);
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.RotateObject::Internal_Set_rotationAxis", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint ____obj_native, global::FlaxEngine.Vector3* __value_native);
        }
    }
}
namespace Game
{
    public unsafe partial class TurretEnemy
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.46610")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        internal static partial global::FlaxEngine.Prefab Internal_Get_bulletPrefab(nint __obj)
        {
            bool __invokeSucceeded = default;
            global::FlaxEngine.Prefab __retVal = default;
            nint __retVal_native = default;
            try
            {
                {
                    __retVal_native = __PInvoke(__obj);
                }

                __invokeSucceeded = true;
                // Unmarshal - Convert native data to managed data.
                __retVal = global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.ConvertToManaged(__retVal_native);
            }
            finally
            {
                if (__invokeSucceeded)
                {
                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
                    global::FlaxEngine.Interop.PrefabMarshaller.NativeToManaged.Free(__retVal_native);
                }
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TurretEnemy::Internal_Get_bulletPrefab", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint ____obj_native);
        }
    }
}
namespace Game
{
    public unsafe partial class TurretEnemy
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("Game", EntryPoint = "Game.TurretEnemy::Internal_Set_bulletPrefab", ExactSpelling = true)]
        internal static extern partial void Internal_Set_bulletPrefab(nint __obj, nint value);
    }
}
